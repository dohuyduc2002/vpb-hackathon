apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
  namespace: flink
type: Opaque
stringData:
  AWS_ACCESS_KEY_ID: minio
  AWS_SECRET_ACCESS_KEY: minio123
---
apiVersion: flink.apache.org/v1beta1
kind: FlinkDeployment
metadata:
  name: flink-job-count-fraud
  namespace: flink
spec:
  image: microwave1005/flink-job:0.0.9
  flinkVersion: v1_20
  flinkConfiguration:
    taskmanager.numberOfTaskSlots: "4"
    s3.credentials.provider.class: com.amazonaws.auth.EnvironmentVariableCredentialsProvider # Environment variables (Very Important): https://docs.confluent.io/kafka-connectors/s3-sink/current/overview.html#install-the-amazon-s3-sink-connector
    s3.endpoint: http://minio-svc.infrastructure.svc.cluster.local:9000
    s3.path.style.access: "true"
    state.backend: rocksdb # state.backend.type: The state backend to use. This defines the data structure mechanism for taking snapshots. Common values are hashmap, rocksdb or forst.
    execution.checkpointing.dir: s3://flink-data/checkpoints
    execution.checkpointing.savepoint-dir: s3://flink-data/savepoints
    execution.checkpointing.interval: "5000"  # Enable checkpoints every 5 seconds
    execution.checkpointing.mode: "EXACTLY_ONCE" # default
  podTemplate:
    spec:
      containers:
      - name: flink-container
        env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: minio-credentials
                key: AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: minio-credentials
                key: AWS_SECRET_ACCESS_KEY
  serviceAccount: flink
  jobManager:
    replicas: 1
    resource:
      memory: "2g"
      cpu: 1
    podTemplate:
      spec:
        containers:
          - name: flink-container
            image: microwave1005/flink-job:0.0.9
            imagePullPolicy: Always  # Add imagePullPolicy for JobManager
            startupProbe:  # Add or modify the startup probe
              httpGet:
                path: /config
                port: 8081
              initialDelaySeconds: 120  # Wait 120 seconds before first probe
              periodSeconds: 5  # Check every 5 seconds
              timeoutSeconds: 5  # Timeout after 5 seconds per probe
              failureThreshold: 48  # Fail after 48 attempts (240 seconds total)
  taskManager:
    replicas: 1
    resource:
      memory: "2g"
      cpu: 1
    podTemplate:
      spec:
        containers:
          - name: flink-container
            image: microwave1005/flink-job:0.0.9
            imagePullPolicy: Always  # Add imagePullPolicy for JobManager
  job: # ref https://github.com/apache/flink-kubernetes-operator/blob/main/examples/flink-python-example/python-example.yaml
    jarURI: local:///opt/flink/lib/flink-python-1.20.0.jar
    entryClass: "org.apache.flink.client.python.PythonDriver"
    args: ["-pyclientexec", "/usr/local/bin/python3", "-py", "/opt/flink/usr/flink_job.py"]
    parallelism: 4
    upgradeMode: savepoint # take snapshot then restart job
    state: running
