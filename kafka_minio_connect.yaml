# 1. Secret MinIO credentials
apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
  namespace: kafka
type: Opaque
stringData:
  AWS_ACCESS_KEY_ID: minio
  AWS_SECRET_ACCESS_KEY: minio123
---
# 2. KafkaConnect resource Strimzi 
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnect
metadata:
  name: connect-cluster
  namespace: kafka
  annotations:
    strimzi.io/use-connector-resources: "true"
spec:
  version: 4.0.0
  image: microwave1005/kafka-connect-s3:0.0.1
  replicas: 1
  bootstrapServers: kafka-cluster-0-kafka-bootstrap.kafka.svc.cluster.local:9092
  config:
    group.id: connect-cluster
    offset.storage.topic: connect-offsets
    config.storage.topic: connect-configs
    status.storage.topic: connect-status
    config.storage.replication.factor: 1
    offset.storage.replication.factor: 1
    status.storage.replication.factor: 1
    config.providers: file
    config.providers.file.class: org.apache.kafka.common.config.provider.FileConfigProvider
    key.converter: org.apache.kafka.connect.json.JsonConverter
    value.converter: org.apache.kafka.connect.json.JsonConverter
    key.converter.schemas.enable: false
    value.converter.schemas.enable: false
    plugin.path: /opt/kafka/plugins
  template:
    connectContainer:
      env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: AWS_SECRET_ACCESS_KEY
---
# 3. KafkaConnector
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnector
metadata:
  name: minio-sink-connector
  namespace: kafka
  labels:
    strimzi.io/cluster: connect-cluster
spec:
  class: io.confluent.connect.s3.S3SinkConnector
  tasksMax: 1
  config:
    topics: "transaction-topic"
    s3.credentials.provider.class: "com.amazonaws.auth.EnvironmentVariableCredentialsProvider"
    s3.bucket.name: "bronze-layer"
    s3.region: "us-west-1"
    store.url: "http://minio.minio.svc.cluster.local:9000"
    s3.part.size: 5242880 
    flush.size: 4000000 
    storage.class: "io.confluent.connect.s3.storage.S3Storage"
    format.class: "io.confluent.connect.s3.format.avro.AvroFormat"
    schema.compatibility: "NONE"
    value.converter: "io.confluent.connect.avro.AvroConverter"
    value.converter.schema.registry.url: "http://schema-registry-svc:8081"

